#!/bin/bash

###Get our IP & Domain Name
ip_addy=$(wget http://ipinfo.io/ip -qO -)
domain_name=$(nslookup "$ip_addy" | grep "name =" | awk '{ print $4 }' | rev| cut -c 2- | rev)
domain_named=$( echo "$domain_name" | tr -d . )
flarum_install="/var/www/$domain_name" webuser_group='www-data'
sudo gpasswd -a $USER www-data

### Confirm IP & Hostname match
while true; do
 #   reset
    echo "Your Hostname is showing as: $domain_name"
    echo "Your IP  Addy is showing as: $ip_addy"
    read -p "Is the above Information correct to your Knowledge?   " yn
    case $yn in
        [Yy]* )
        
                break;;
        [Nn]* ) read -p "Please Enter the Hostname of your Primary Discourse Instance:   " domain_name;;
        * ) echo "Please answer yes or no.";;
    esac
done

### Get current Email addy
read -p "Enter your current email address:   " email

# Update lists
echo 'Updating...'
sudo apt-get update 1> /dev/null


# Install packages
echo 'Installing Prereqs...'
sudo apt-get install pwgen php7.0-mysql php7.0-common zip php7.0 php7.0-gd php7.0-xml php7.0-mbstring php7.0-curl composer nginx mysql-server -qq


# Install composer
if [ ! -e /usr/bin/composer ]
  then
    php -r "readfile('https://getcomposer.org/installer');" > composer-setup.php
    sudo php composer-setup.php --install-dir=/usr/bin --filename composer
    php -r "unlink('composer-setup.php');"
fi


# Install flarum
echo Installing flarum..
composer create-project flarum/flarum "$flarum_install" --stability=beta


# Change group and permissions
chmod 775 "$flarum_install"
chmod -R 775 "$flarum_install/assets" "$flarum_install/storage"
sudo chgrp "$webuser_group" "$flarum_install"
sudo chgrp -R "$webuser_group" "$flarum_install/assets" "$flarum_install/storage"

### Write php7-fpm pool config
echo writing php7-fpm config
echo "
[$domain_name]

listen = /var/run/php7-fpm.$domain_name.sock
listen.allowed_clients = 127.0.0.1

user = www-data
group = www-data

listen.owner = www-data
listen.group = www-data

pm = ondemand

pm.max_children = 10
pm.max_requests = 5000
pm.process_idle_timeout = 60s

chdir = /
" > /etc/php/7.0/fpm/pool.d/$domain_name.conf

### Write Nginx config
echo writing nginx config

echo "
server {
  listen 80;

  root $flarum_install;
  index index.php index.html index.htm;
  error_log /var/log/nginx/error.log error;

  server_name $domain_name;

" > /etc/nginx/sites-available/$domain_name

sudo tee --append << 'EOF' /etc/nginx/sites-available/$domain_name &> /dev/null


    location / { try_files $uri $uri/ /index.php?$query_string; }
    location /api { try_files $uri $uri/ /api.php?$query_string; }
    location /admin { try_files $uri $uri/ /admin.php?$query_string; }
EOF

echo "
    location /flarum {
        deny all;
        return 404;
    }

    location ~ .php$ {
        fastcgi_split_path_info ^(.+.php)(/.+)$;
        fastcgi_pass unix:/var/run/php7-fpm.$domain_name.sock;
        fastcgi_index index.php;
        include fastcgi_params;

" >> /etc/nginx/sites-available/$domain_name

sudo tee --append << 'EOF' /etc/nginx/sites-available/$domain_name &> /dev/null

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location ~* \.html$ {
        expires -1;
    }

    location ~* \.(css|js|gif|jpe?g|png)$ {
        expires 1M;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    gzip on;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types application/atom+xml
               application/javascript
               application/json
               application/vnd.ms-fontobject
               application/x-font-ttf
               application/x-web-app-manifest+json
               application/xhtml+xml
               application/xml
               font/opentype
               image/svg+xml
               image/x-icon
               text/css
               text/plain
               text/xml;
    gzip_buffers 16 8k;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";


}
EOF

# Enable flarum site
sudo ln -s /etc/nginx/sites-available/$domain_name /etc/nginx/sites-enabled/$domain_name

#Stop apache2 if running and start other services

if (( $(ps -ef | grep -v grep | grep apache2 | wc -l) > 0 ))
then
sudo service apache2 stop
fi

sudo service php7.0-fpm stop; sudo service php7.0-fpm start
sudo service nginx configtest && sudo service nginx restart

# Generate Password

generated_mysql_pass=$(pwgen 20 1)
read -sp 'Enter mysql root password ' mysql_pass

# Database creation

mysql -uroot -p"$mysql_pass" -e "CREATE DATABASE IF NOT EXISTS flarum_$domain_named ;"
mysql -uroot -p"$mysql_pass" -e "CREATE USER flarum_$domain_named@localhost IDENTIFIED BY '$generated_mysql_pass';"
mysql -uroot -p"$mysql_pass" -e "GRANT USAGE ON flarum_$domain_named.* TO flarum_$domain_named@localhost IDENTIFIED BY '$generated_mysql_pass' WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0 ;"
mysql -uroot -p"$mysql_pass" -e "GRANT ALL PRIVILEGES ON flarum_$domain_named.* TO flarum_$domain_named@localhost;"

echo "Flarum username -> flarum_$domain_named" >> Records
echo "Flarum database -> flarum_$domain_named" >> Records
echo 'Flarum database password ->' "$generated_mysql_pass" >> Records
unset mysql_pass generated_mysql_pass

### Install MailServer
apt-get purge exim4* postfix* -qq
apt-get install exim4 -qq
sudo dpkg-reconfigure -f noninteractive exim4-config

### Configure Exim4
sed -i "s/'local'/'internet'/g" /etc/exim4/update-exim4.conf.conf

### Generate DKIM keys
openssl genrsa -out "$domain_name"-private.pem 1024 -outform PEM
openssl rsa -in "$domain_name"-private.pem -out "$domain_name".pem -pubout -outform PEM
mkdir /etc/exim4/dkim 
mv *.pem /etc/exim4/dkim
cp /etc/exim4/dkim/"$domain_name".pem /tmp/key.pem
sed -i "1d" /tmp/key.pem
sed -i "5d" /tmp/key.pem
key=$(cat /tmp/key.pem | tr -d " \t\n\r")
sed -i '\|CONFDIR = /etc/exim4|a DKIM_CANON = relaxed' /etc/exim4/exim4.conf.template
sed -i "\|CONFDIR = /etc/exim4|a DKIM_DOMAIN = $domain_name" /etc/exim4/exim4.conf.template
sed -i "\|CONFDIR = /etc/exim4|a DKIM_PRIVATE_KEY = CONFDIR/dkim/$domain_name-private.pem" /etc/exim4/exim4.conf.template
sed -i '\|CONFDIR = /etc/exim4|a DKIM_SELECTOR = mail' /etc/exim4/exim4.conf.template

update-exim4.conf
service exim4 restart

#reset
### create list of records to be stores
echo "#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!"  >> Records
echo "Please enter this record with your DNS manager" >> Records
echo "Type:            A" >> Records
echo "Host:            $domain_name" >> Records
echo "TXT Value:       $ip_addy" >> Records
echo "#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!"  >> Records

echo "Please enter this record with your DNS manager" >> Records
echo "Type:            MX" >> Records
echo "Priority:        10" >> Records
echo "Host:            @" >> Records
echo "TXT Value:       $domain_name" >> Records
echo "#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!"  >> Records

echo "Please enter this record with your DNS manager" >> Records
echo "Type:        TXT" >> Records
echo "Host:        $domain_name" >> Records
echo "TXT Value:   v=spf1 mx ip4:$ip_addy ~all" >> Records
echo "#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!"  >> Records

echo "Please enter this record with your DNS manager" >> Records
echo "Type:        TXT" >> Records
echo "Host:        mail._domainkey.$domain_name" >> Records
echo "TXT Value:   v=DKIM1; k=rsa; p=$key" >> Records
echo "#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!"  >> Records

### Mail Records
echo "#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!"
echo "#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!"
echo "Attempting to send you email regarding your DNS records"
echo "Please check your inbox and spam folders."
echo "If this mail is not received you will need to open the file called Records after this script exits"
echo "#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!"
echo "#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!"
cat ~/Records | mail -s Records "$email"
